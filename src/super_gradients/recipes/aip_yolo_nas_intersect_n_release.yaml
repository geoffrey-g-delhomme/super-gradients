# YoloNAS-S Detection training on COCO2017 Dataset:
# This training recipe is for demonstration purposes only. Pretrained models were trained using a different recipe.
# So it will not be possible to reproduce the results of the pretrained models using this recipe.

# Instructions:
#   0. Make sure that the data is stored in dataset_params.dataset_dir or add "dataset_params.data_dir=<PATH-TO-DATASET>" at the end of the command below (feel free to check ReadMe)
#   1. Move to the project root (where you will find the ReadMe and src folder)
#   2. Run the command you want:
#         yolo_nas_s: python src/super_gradients/examples/train_from_recipe_example/train_from_recipe.py --config-name=coco2017_yolo_nas_s
#

defaults:
  - aip_yolo_nas_intersect_n
  - _self_
  - variable_setup
  
# dataset_coco_root_dirpath: "/mnt/data1/user_cache/geoffrey.g.delhomme/data/2023_12/nominal/coco-1024x750"
dataset_coco_root_dirpath: "/mnt/data1/user_cache/geoffrey.g.delhomme/data/2023_12/inter/coco-1024x750"

multi_gpu: DDP
num_gpus: 4

experiment_suffix: "release"

training_hyperparams:
  sg_logger: "wandb_sg_logger" # Weights&Biases Logger, see class super_gradients.common.sg_loggers.wandb_sg_logger.WandBSGLogger for details
  sg_logger_params: # Params that will be passed to __init__ of the logger super_gradients.common.sg_loggers.wandb_sg_logger.WandBSGLogger
    project_name: super-gradients-intersect # W&B project name
    experiment_name: ${experiment_name}
    launch_tensorboard: False
    tensorboard_port: 5463
    save_checkpoints_remote: True
    save_tensorboard_remote: True
    save_logs_remote: True
    entity: "geoffrey-g-delhomme-col" # username or team name where you're sending runs
    save_code: False
    save_checkpoint_as_artifact: False
    # api_server: "<OPTIONAL-WANDB-URL>" # Optional: In case your experiment tracking is not hosted at wandb servers
